name: 'release'
on:
  push:
    tags:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_URL: ${{ secrets.PRODUCTION_URL }}
      NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.PRODUCTION_API_ENDPOINT }}
      NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
      NEXT_PUBLIC_GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
      NEXT_PUBLIC_SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
      DOCKER_REGISTRY_PASS: ${{ secrets.DOCKER_REGISTRY_PASS }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Cache target
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-
    - name: Dependencies
      run: make node_modules
    - name: Linting
      run: make lint
    - name: Build
      run: make build
    - name: Push images
      run: make push
    - name: 'SSH: configure agent'
      uses: webfactory/ssh-agent@v0.1.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: 'SSH: trust host'
      run: for ip in $(dig @1.1.1.1 ${DEPLOY_HOST} +short); do ssh-keyscan ${DEPLOY_HOST},$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
    - name: Deploy
      run: make deploy
